{
  "version": 4,
  "terraform_version": "0.13.5",
  "serial": 20,
  "lineage": "13959da6-a57b-93d7-5d27-a8a9e0ab0130",
  "outputs": {
    "aws_vault_iam_role_arn": {
      "value": "arn:aws:iam::332258952501:role/vault-vfej",
      "type": "string"
    },
    "aws_vault_ip": {
      "value": "54.89.189.97",
      "type": "string"
    },
    "azure_vault_ip": {
      "value": "52.171.52.243",
      "type": "string"
    },
    "azure_vault_user_assigned_identity_principal_id": {
      "value": "bc7160bb-b986-433b-a7e1-a6ec38982c02",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "ubuntu",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:us-east-1::image/ami-01e1e3f0046f48453",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-03d3be98518c38a29",
                  "throughput": "0",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "/dev/sdc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              }
            ],
            "creation_date": "2023-04-13T12:31:01.000Z",
            "description": "Hashistack - Ubuntu",
            "ena_support": true,
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "hashistack-*"
                ]
              },
              {
                "name": "virtualization-type",
                "values": [
                  "hvm"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-01e1e3f0046f48453",
            "image_id": "ami-01e1e3f0046f48453",
            "image_location": "332258952501/hashistack-2023-04-13",
            "image_owner_alias": null,
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "hashistack-2023-04-13",
            "name_regex": null,
            "owner_id": "332258952501",
            "owners": [
              "self"
            ],
            "platform": null,
            "platform_details": "Linux/UNIX",
            "product_codes": [],
            "public": false,
            "ramdisk_id": null,
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-03d3be98518c38a29",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {
              "Name": "Hashistack",
              "OS": "ubuntu",
              "OS-Version": "bionic"
            },
            "usage_operation": "RunInstances",
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "azurerm_client_config",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_id": "08f4a0fa-42c8-46e2-b6e3-9da8b4e5700b",
            "id": "2023-04-13 12:42:42.02790972 +0000 UTC",
            "object_id": "2c783f99-c484-45ba-9074-e01494a724db",
            "subscription_id": "37bc21fd-d0f5-46a3-8802-d5136be12b7e",
            "tenant_id": "ab2e4aa2-3855-48b9-8d02-619cee6d9513",
            "timeouts": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "azurerm_image",
      "name": "ubuntu",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "data_disk": [],
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/packer/providers/Microsoft.Compute/images/hashistack-2023-04-13",
            "location": "southcentralus",
            "name": "hashistack-2023-04-13",
            "name_regex": "hashistack-*",
            "os_disk": [
              {
                "blob_uri": "",
                "caching": "ReadWrite",
                "managed_disk_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/pkr-Resource-Group-mw3b8rzom0/providers/Microsoft.Compute/disks/pkrosmw3b8rzom0",
                "os_state": "Generalized",
                "os_type": "Linux",
                "size_gb": 30
              }
            ],
            "resource_group_name": "packer",
            "sort_descending": false,
            "tags": {
              "name": "Hashistack",
              "os": "ubuntu",
              "os-version": "bionic"
            },
            "timeouts": null,
            "zone_resilient": false
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "azurerm_subscription",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "display_name": "Instruqt Subscription ztjpztn13ziq",
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e",
            "location_placement_id": "Public_2014-09-01",
            "quota_id": "EnterpriseAgreement_2014-09-01",
            "spending_limit": "Off",
            "state": "Enabled",
            "subscription_id": "37bc21fd-d0f5-46a3-8802-d5136be12b7e",
            "tags": {},
            "tenant_id": "ab2e4aa2-3855-48b9-8d02-619cee6d9513",
            "timeouts": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "azure-vault-init",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "66a00e81b4f502d963f0883ebadb8c288650c79887b1c1d62f9876c396079af1",
            "rendered": "#!/bin/bash\n# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n\n#meta\nlocal_ipv4=$(curl -H Metadata:true --noproxy \"*\" \"http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/privateIpAddress?api-version=2017-08-01\u0026format=text\")\n\n#dirs\nmkdir -p /opt/vault/raft\nmkdir -p /etc/vault-agent.d/\nmkdir -p /opt/consul/tls/\nchown -R vault:vault /opt/vault/raft\nchown -R consul:consul /opt/consul/\nchown -R consul:consul /etc/consul.d/\n\n#vault\ncat \u003c\u003cEOF\u003e /etc/vault.d/vault.hcl\nui = true\nlicense_path = \"/etc/vault.d/vault.hclic\"\n\nstorage \"raft\" {\n  path = \"/opt/vault/raft\"\n  node_id = \"vault-server-0\"\n}\n\nlistener \"tcp\" {\n  address       = \"0.0.0.0:8200\"\n  tls_disable   = \"true\"\n}\n\nseal \"azurekeyvault\" {\n  tenant_id      = \"ab2e4aa2-3855-48b9-8d02-619cee6d9513\"\n  vault_name     = \"vault-vfej\"\n  key_name       = \"vault-key-vfej\"\n}\n\napi_addr     = \"http://${local_ipv4}:8200\"\ncluster_addr = \"http://${local_ipv4}:8201\"\nEOF\ncat \u003c\u003c'EOF'\u003e /usr/lib/systemd/system/vault.service\n[Unit]\nDescription=\"HashiCorp Vault - A tool for managing secrets\"\nDocumentation=https://www.vaultproject.io/docs/\nRequires=network-online.target\nAfter=network-online.target\nConditionFileNotEmpty=/etc/vault.d/vault.hcl\nStartLimitIntervalSec=60\nStartLimitBurst=3\n\n[Service]\nUser=vault\nGroup=vault\nProtectSystem=full\nProtectHome=read-only\nPrivateTmp=yes\nPrivateDevices=yes\nSecureBits=keep-caps\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nNoNewPrivileges=yes\nExecStart=/usr/bin/vault server -config=/etc/vault.d/\nExecReload=/bin/kill --signal HUP $MAINPID\nKillMode=process\nKillSignal=SIGINT\nRestart=on-failure\nRestartSec=5\nTimeoutStopSec=30\nStartLimitInterval=60\nStartLimitBurst=3\nLimitNOFILE=65536\nLimitMEMLOCK=infinity\n\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo systemctl enable vault.service\nsudo systemctl start vault.service\n\n#vault agent\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-ca-template.ctmpl\n{{ with secret \"pki/cert/ca\" }}\n{{ .Data.certificate }}\n{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-acl-template.ctmpl\nacl {\n  enabled        = true\n  default_policy = \"deny\"\n  down_policy   = \"extend-cache\"\n  enable_token_persistence = true\n  enable_token_replication = true\n  tokens {\n    agent  = {{ with secret \"consul/creds/agent\" }}\"{{ .Data.token }}\"{{ end }}\n  }\n}\nencrypt = {{ with secret \"kv/consul\" }}\"{{ .Data.data.gossip_key }}\"{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault-template.ctmpl\nservice_registration \"consul\" {\n  address = \"localhost:8500\"{{ with secret \"consul/creds/vault\" }}\n  token   = \"{{ .Data.token }}\"{{ end }}\n}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault.hcl\npid_file = \"/var/run/vault-agent-pidfile\"\nauto_auth {\n  method \"azure\" {\n      mount_path = \"auth/azure\"\n      config = {\n          role = \"vault\"\n          resource = \"https://management.azure.com/\"\n      }\n  }\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-ca-template.ctmpl\"\n  destination = \"/opt/consul/tls/ca-cert.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-acl-template.ctmpl\"\n  destination = \"/etc/consul.d/acl.hcl\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/vault-template.ctmpl\"\n  destination = \"/etc/vault.d/consul.hcl\"\n  command     = \"sudo service vault restart\"\n}\nvault {\n  address = \"http://localhost:8200\"\n}\nEOF\ncat \u003c\u003cEOF \u003e /etc/systemd/system/vault-agent.service\n[Unit]\nDescription=Envoy\nAfter=network-online.target\nWants=consul.service\n[Service]\nExecStart=/usr/bin/vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug\nRestart=always\nRestartSec=5\nStartLimitIntervalSec=0\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug -exit-after-auth\n\n#consul\ncat \u003c\u003cEOF\u003e /etc/consul.d/client.json\n{\n  \"datacenter\": \"azure-west-us-2\",\n  \"primary_datacenter\": \"aws-us-east-1\",\n  \"advertise_addr\": \"${local_ipv4}\",\n  \"data_dir\": \"/opt/consul/data\",\n  \"client_addr\": \"0.0.0.0\",\n  \"log_level\": \"INFO\",\n  \"retry_join\": [\"provider=azure tag_name=Env tag_value=consul-vfej subscription_id=37bc21fd-d0f5-46a3-8802-d5136be12b7e\"],\n  \"ui\": true,\n  \"connect\": {\n    \"enabled\": true\n  },\n  \"ports\": {\n    \"grpc\": 8502\n  }\n}\nEOF\ncat \u003c\u003cEOF\u003e /etc/consul.d/tls.json\n{\n  \"verify_incoming\": false,\n  \"verify_outgoing\": true,\n  \"verify_server_hostname\": true,\n  \"ca_file\": \"/opt/consul/tls/ca-cert.pem\",\n  \"auto_encrypt\": {\n    \"tls\": true\n  }\n}\nEOF\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n#start the vault-agent\nsleep 30\nsudo systemctl enable vault-agent.service\nsudo systemctl start vault-agent.service\n\nexit 0\n",
            "template": "#!/bin/bash\n# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n\n#meta\nlocal_ipv4=$(curl -H Metadata:true --noproxy \"*\" \"http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/privateIpAddress?api-version=2017-08-01\u0026format=text\")\n\n#dirs\nmkdir -p /opt/vault/raft\nmkdir -p /etc/vault-agent.d/\nmkdir -p /opt/consul/tls/\nchown -R vault:vault /opt/vault/raft\nchown -R consul:consul /opt/consul/\nchown -R consul:consul /etc/consul.d/\n\n#vault\ncat \u003c\u003cEOF\u003e /etc/vault.d/vault.hcl\nui = true\nlicense_path = \"/etc/vault.d/vault.hclic\"\n\nstorage \"raft\" {\n  path = \"/opt/vault/raft\"\n  node_id = \"vault-server-0\"\n}\n\nlistener \"tcp\" {\n  address       = \"0.0.0.0:8200\"\n  tls_disable   = \"true\"\n}\n\nseal \"azurekeyvault\" {\n  tenant_id      = \"${tenant_id}\"\n  vault_name     = \"${vault_name}\"\n  key_name       = \"${key_name}\"\n}\n\napi_addr     = \"http://$${local_ipv4}:8200\"\ncluster_addr = \"http://$${local_ipv4}:8201\"\nEOF\ncat \u003c\u003c'EOF'\u003e /usr/lib/systemd/system/vault.service\n[Unit]\nDescription=\"HashiCorp Vault - A tool for managing secrets\"\nDocumentation=https://www.vaultproject.io/docs/\nRequires=network-online.target\nAfter=network-online.target\nConditionFileNotEmpty=/etc/vault.d/vault.hcl\nStartLimitIntervalSec=60\nStartLimitBurst=3\n\n[Service]\nUser=vault\nGroup=vault\nProtectSystem=full\nProtectHome=read-only\nPrivateTmp=yes\nPrivateDevices=yes\nSecureBits=keep-caps\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nNoNewPrivileges=yes\nExecStart=/usr/bin/vault server -config=/etc/vault.d/\nExecReload=/bin/kill --signal HUP $MAINPID\nKillMode=process\nKillSignal=SIGINT\nRestart=on-failure\nRestartSec=5\nTimeoutStopSec=30\nStartLimitInterval=60\nStartLimitBurst=3\nLimitNOFILE=65536\nLimitMEMLOCK=infinity\n\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo systemctl enable vault.service\nsudo systemctl start vault.service\n\n#vault agent\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-ca-template.ctmpl\n{{ with secret \"pki/cert/ca\" }}\n{{ .Data.certificate }}\n{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-acl-template.ctmpl\nacl {\n  enabled        = true\n  default_policy = \"deny\"\n  down_policy   = \"extend-cache\"\n  enable_token_persistence = true\n  enable_token_replication = true\n  tokens {\n    agent  = {{ with secret \"consul/creds/agent\" }}\"{{ .Data.token }}\"{{ end }}\n  }\n}\nencrypt = {{ with secret \"kv/consul\" }}\"{{ .Data.data.gossip_key }}\"{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault-template.ctmpl\nservice_registration \"consul\" {\n  address = \"localhost:8500\"{{ with secret \"consul/creds/vault\" }}\n  token   = \"{{ .Data.token }}\"{{ end }}\n}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault.hcl\npid_file = \"/var/run/vault-agent-pidfile\"\nauto_auth {\n  method \"azure\" {\n      mount_path = \"auth/azure\"\n      config = {\n          role = \"vault\"\n          resource = \"https://management.azure.com/\"\n      }\n  }\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-ca-template.ctmpl\"\n  destination = \"/opt/consul/tls/ca-cert.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-acl-template.ctmpl\"\n  destination = \"/etc/consul.d/acl.hcl\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/vault-template.ctmpl\"\n  destination = \"/etc/vault.d/consul.hcl\"\n  command     = \"sudo service vault restart\"\n}\nvault {\n  address = \"http://localhost:8200\"\n}\nEOF\ncat \u003c\u003cEOF \u003e /etc/systemd/system/vault-agent.service\n[Unit]\nDescription=Envoy\nAfter=network-online.target\nWants=consul.service\n[Service]\nExecStart=/usr/bin/vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug\nRestart=always\nRestartSec=5\nStartLimitIntervalSec=0\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug -exit-after-auth\n\n#consul\ncat \u003c\u003cEOF\u003e /etc/consul.d/client.json\n{\n  \"datacenter\": \"azure-west-us-2\",\n  \"primary_datacenter\": \"aws-us-east-1\",\n  \"advertise_addr\": \"$${local_ipv4}\",\n  \"data_dir\": \"/opt/consul/data\",\n  \"client_addr\": \"0.0.0.0\",\n  \"log_level\": \"INFO\",\n  \"retry_join\": [\"provider=azure tag_name=Env tag_value=consul-${env} subscription_id=${subscription_id}\"],\n  \"ui\": true,\n  \"connect\": {\n    \"enabled\": true\n  },\n  \"ports\": {\n    \"grpc\": 8502\n  }\n}\nEOF\ncat \u003c\u003cEOF\u003e /etc/consul.d/tls.json\n{\n  \"verify_incoming\": false,\n  \"verify_outgoing\": true,\n  \"verify_server_hostname\": true,\n  \"ca_file\": \"/opt/consul/tls/ca-cert.pem\",\n  \"auto_encrypt\": {\n    \"tls\": true\n  }\n}\nEOF\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n#start the vault-agent\nsleep 30\nsudo systemctl enable vault-agent.service\nsudo systemctl start vault-agent.service\n\nexit 0\n",
            "vars": {
              "env": "vfej",
              "key_name": "vault-key-vfej",
              "subscription_id": "37bc21fd-d0f5-46a3-8802-d5136be12b7e",
              "tenant_id": "ab2e4aa2-3855-48b9-8d02-619cee6d9513",
              "vault_name": "vault-vfej"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "7788965cb53db5b5e18a1166004a88235e3c33ff657c8d8c7c3994fc899eb369",
            "rendered": "#!/bin/bash\n# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n\n#meta\nlocal_ipv4=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\ninstance=\"$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\"\n\n#dirs\nmkdir -p /opt/vault/raft\nmkdir -p /etc/vault-agent.d/\nmkdir -p /opt/consul/tls/\nchown -R vault:vault /opt/vault/raft\nchown -R consul:consul /opt/consul/\nchown -R consul:consul /etc/consul.d/\n\n#vault\ncat \u003c\u003cEOF\u003e /etc/vault.d/vault.hcl\nui = true\nlicense_path = \"/etc/vault.d/vault.hclic\"\n\nstorage \"raft\" {\n  path = \"/opt/vault/raft\"\n  node_id = \"vault-server-0\"\n}\n\nlistener \"tcp\" {\n  address       = \"0.0.0.0:8200\"\n  tls_disable   = \"true\"\n}\n\nseal \"awskms\" {\n  region = \"us-east-1\"\n  kms_key_id = \"b2fe096f-d275-4712-b636-109a5b0d9d86\"\n}\n\napi_addr     = \"http://${local_ipv4}:8200\"\ncluster_addr = \"http://${local_ipv4}:8201\"\nEOF\ncat \u003c\u003c'EOF'\u003e /usr/lib/systemd/system/vault.service\n[Unit]\nDescription=\"HashiCorp Vault - A tool for managing secrets\"\nDocumentation=https://www.vaultproject.io/docs/\nRequires=network-online.target\nAfter=network-online.target\nConditionFileNotEmpty=/etc/vault.d/vault.hcl\nStartLimitIntervalSec=60\nStartLimitBurst=3\n\n[Service]\nUser=vault\nGroup=vault\nProtectSystem=full\nProtectHome=read-only\nPrivateTmp=yes\nPrivateDevices=yes\nSecureBits=keep-caps\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nNoNewPrivileges=yes\nExecStart=/usr/bin/vault server -config=/etc/vault.d/\nExecReload=/bin/kill --signal HUP $MAINPID\nKillMode=process\nKillSignal=SIGINT\nRestart=on-failure\nRestartSec=5\nTimeoutStopSec=30\nStartLimitInterval=60\nStartLimitBurst=3\nLimitNOFILE=65536\nLimitMEMLOCK=infinity\n\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo systemctl enable vault.service\nsudo systemctl start vault.service\n\n#vault agent\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-ca-template.ctmpl\n{{ with secret \"pki/cert/ca\" }}{{ .Data.certificate }}{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault-template.ctmpl\nservice_registration \"consul\" {\n  address = \"localhost:8500\"{{ with secret \"consul/creds/vault\" }}\n  token   = \"{{ .Data.token }}\"{{ end }}\n}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/jwt-template.ctmpl\n{{ with secret \"identity/oidc/token/consul-aws-us-east-1\" }}{{ .Data.token }}{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault.hcl\npid_file = \"/var/run/vault-agent-pidfile\"\nauto_auth {\n  method \"aws\" {\n      mount_path = \"auth/aws\"\n      config = {\n          type = \"iam\"\n          role = \"vault\"\n      }\n  }\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-ca-template.ctmpl\"\n  destination = \"/opt/consul/tls/ca-cert.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/vault-template.ctmpl\"\n  destination = \"/etc/vault.d/consul.hcl\"\n  command     = \"sudo service vault restart\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/jwt-template.ctmpl\"\n  destination = \"/etc/consul.d/token\"\n  command     = \"sudo service consul reload\"\n}\nvault {\n  address = \"http://localhost:8200\"\n}\nEOF\ncat \u003c\u003cEOF \u003e /etc/systemd/system/vault-agent.service\n[Unit]\nDescription=Envoy\nAfter=network-online.target\nWants=consul.service\n[Service]\nExecStart=/usr/bin/vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug\nRestart=always\nRestartSec=5\nStartLimitIntervalSec=0\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug -exit-after-auth\n\n#consul\ncat \u003c\u003cEOF\u003e /etc/consul.d/client.json\n{\n  \"datacenter\": \"aws-us-east-1\",\n  \"primary_datacenter\": \"aws-us-east-1\",\n  \"advertise_addr\": \"${local_ipv4}\",\n  \"data_dir\": \"/opt/consul/data\",\n  \"client_addr\": \"0.0.0.0\",\n  \"node_name\": \"${instance}\",\n  \"log_level\": \"INFO\",\n  \"ui\": true,\n  \"connect\": {\n    \"enabled\": true\n  },\n  \"ports\": {\n    \"grpc\": 8502\n  }\n}\nEOF\ncat \u003c\u003cEOF\u003e /etc/consul.d/tls.hcl\nca_file = \"/opt/consul/tls/ca-cert.pem\"\nverify_incoming = false\nverify_outgoing = true\nverify_server_hostname = true\nEOF\ncat \u003c\u003cEOF\u003e /etc/consul.d/auto.json\n{\n  \"auto_config\": {\n    \"enabled\": true,\n    \"intro_token_file\": \"/etc/consul.d/token\",\n    \"server_addresses\": [\n      \"provider=aws tag_key=Env tag_value=consul-vfej\"\n    ]\n  }\n}\nEOF\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n#start the vault-agent\nsleep 30\nsudo systemctl enable vault-agent.service\nsudo systemctl start vault-agent.service\n\nexit 0\n",
            "template": "#!/bin/bash\n# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n\n#meta\nlocal_ipv4=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)\ninstance=\"$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\"\n\n#dirs\nmkdir -p /opt/vault/raft\nmkdir -p /etc/vault-agent.d/\nmkdir -p /opt/consul/tls/\nchown -R vault:vault /opt/vault/raft\nchown -R consul:consul /opt/consul/\nchown -R consul:consul /etc/consul.d/\n\n#vault\ncat \u003c\u003cEOF\u003e /etc/vault.d/vault.hcl\nui = true\nlicense_path = \"/etc/vault.d/vault.hclic\"\n\nstorage \"raft\" {\n  path = \"/opt/vault/raft\"\n  node_id = \"vault-server-0\"\n}\n\nlistener \"tcp\" {\n  address       = \"0.0.0.0:8200\"\n  tls_disable   = \"true\"\n}\n\nseal \"awskms\" {\n  region = \"us-east-1\"\n  kms_key_id = \"${kms_key}\"\n}\n\napi_addr     = \"http://$${local_ipv4}:8200\"\ncluster_addr = \"http://$${local_ipv4}:8201\"\nEOF\ncat \u003c\u003c'EOF'\u003e /usr/lib/systemd/system/vault.service\n[Unit]\nDescription=\"HashiCorp Vault - A tool for managing secrets\"\nDocumentation=https://www.vaultproject.io/docs/\nRequires=network-online.target\nAfter=network-online.target\nConditionFileNotEmpty=/etc/vault.d/vault.hcl\nStartLimitIntervalSec=60\nStartLimitBurst=3\n\n[Service]\nUser=vault\nGroup=vault\nProtectSystem=full\nProtectHome=read-only\nPrivateTmp=yes\nPrivateDevices=yes\nSecureBits=keep-caps\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nNoNewPrivileges=yes\nExecStart=/usr/bin/vault server -config=/etc/vault.d/\nExecReload=/bin/kill --signal HUP $MAINPID\nKillMode=process\nKillSignal=SIGINT\nRestart=on-failure\nRestartSec=5\nTimeoutStopSec=30\nStartLimitInterval=60\nStartLimitBurst=3\nLimitNOFILE=65536\nLimitMEMLOCK=infinity\n\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo systemctl enable vault.service\nsudo systemctl start vault.service\n\n#vault agent\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-ca-template.ctmpl\n{{ with secret \"pki/cert/ca\" }}{{ .Data.certificate }}{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault-template.ctmpl\nservice_registration \"consul\" {\n  address = \"localhost:8500\"{{ with secret \"consul/creds/vault\" }}\n  token   = \"{{ .Data.token }}\"{{ end }}\n}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/jwt-template.ctmpl\n{{ with secret \"identity/oidc/token/consul-aws-us-east-1\" }}{{ .Data.token }}{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault.hcl\npid_file = \"/var/run/vault-agent-pidfile\"\nauto_auth {\n  method \"aws\" {\n      mount_path = \"auth/aws\"\n      config = {\n          type = \"iam\"\n          role = \"vault\"\n      }\n  }\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-ca-template.ctmpl\"\n  destination = \"/opt/consul/tls/ca-cert.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/vault-template.ctmpl\"\n  destination = \"/etc/vault.d/consul.hcl\"\n  command     = \"sudo service vault restart\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/jwt-template.ctmpl\"\n  destination = \"/etc/consul.d/token\"\n  command     = \"sudo service consul reload\"\n}\nvault {\n  address = \"http://localhost:8200\"\n}\nEOF\ncat \u003c\u003cEOF \u003e /etc/systemd/system/vault-agent.service\n[Unit]\nDescription=Envoy\nAfter=network-online.target\nWants=consul.service\n[Service]\nExecStart=/usr/bin/vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug\nRestart=always\nRestartSec=5\nStartLimitIntervalSec=0\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug -exit-after-auth\n\n#consul\ncat \u003c\u003cEOF\u003e /etc/consul.d/client.json\n{\n  \"datacenter\": \"aws-us-east-1\",\n  \"primary_datacenter\": \"aws-us-east-1\",\n  \"advertise_addr\": \"$${local_ipv4}\",\n  \"data_dir\": \"/opt/consul/data\",\n  \"client_addr\": \"0.0.0.0\",\n  \"node_name\": \"$${instance}\",\n  \"log_level\": \"INFO\",\n  \"ui\": true,\n  \"connect\": {\n    \"enabled\": true\n  },\n  \"ports\": {\n    \"grpc\": 8502\n  }\n}\nEOF\ncat \u003c\u003cEOF\u003e /etc/consul.d/tls.hcl\nca_file = \"/opt/consul/tls/ca-cert.pem\"\nverify_incoming = false\nverify_outgoing = true\nverify_server_hostname = true\nEOF\ncat \u003c\u003cEOF\u003e /etc/consul.d/auto.json\n{\n  \"auto_config\": {\n    \"enabled\": true,\n    \"intro_token_file\": \"/etc/consul.d/token\",\n    \"server_addresses\": [\n      \"provider=aws tag_key=Env tag_value=consul-${env}\"\n    ]\n  }\n}\nEOF\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n#start the vault-agent\nsleep 30\nsudo systemctl enable vault-agent.service\nsudo systemctl start vault-agent.service\n\nexit 0\n",
            "vars": {
              "env": "vfej",
              "kms_key": "b2fe096f-d275-4712-b636-109a5b0d9d86"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "terraform_remote_state",
      "name": "infra",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "local",
            "config": {
              "value": {
                "path": "../infra/terraform.tfstate"
              },
              "type": [
                "object",
                {
                  "path": "string"
                }
              ]
            },
            "defaults": null,
            "outputs": {
              "value": {
                "aws_shared_svcs_private_subnets": [
                  "subnet-0f28b3e2ffeb6c850",
                  "subnet-02954e54ad1f182d6",
                  "subnet-04a046c94626becbd"
                ],
                "aws_shared_svcs_public_subnets": [
                  "subnet-00e0abdeeb6e3dfc1",
                  "subnet-04d2924304f7e501c",
                  "subnet-0218dec6dd57ff1a8"
                ],
                "aws_shared_svcs_vpc": "vpc-09d729a27d42ad613",
                "aws_ssh_key_name": "instruqt-vfej",
                "azure_app_public_subnets": [
                  "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/virtualNetworks/app-vnet/subnets/app"
                ],
                "azure_rg_location": "southcentralus",
                "azure_rg_name": "instruqt-vfej",
                "azure_shared_svcs_public_subnets": [
                  "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/virtualNetworks/shared-svcs-vnet/subnets/shared"
                ],
                "env": "vfej",
                "gcp_shared_svcs_network_self_link": "https://www.googleapis.com/compute/v1/projects/p-vog23x9oea5u-0/global/networks/vpc-shared-svcs"
              },
              "type": [
                "object",
                {
                  "aws_shared_svcs_private_subnets": [
                    "tuple",
                    [
                      "string",
                      "string",
                      "string"
                    ]
                  ],
                  "aws_shared_svcs_public_subnets": [
                    "tuple",
                    [
                      "string",
                      "string",
                      "string"
                    ]
                  ],
                  "aws_shared_svcs_vpc": "string",
                  "aws_ssh_key_name": "string",
                  "azure_app_public_subnets": [
                    "tuple",
                    [
                      "string"
                    ]
                  ],
                  "azure_rg_location": "string",
                  "azure_rg_name": "string",
                  "azure_shared_svcs_public_subnets": [
                    "tuple",
                    [
                      "string"
                    ]
                  ],
                  "env": "string",
                  "gcp_shared_svcs_network_self_link": "string"
                }
              ]
            },
            "workspace": null
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::332258952501:instance-profile/vault-vfej",
            "create_date": "2023-04-13T12:37:35Z",
            "id": "vault-vfej",
            "name": "vault-vfej",
            "name_prefix": null,
            "path": "/",
            "role": "vault-vfej",
            "tags": {},
            "tags_all": {},
            "unique_id": "AIPAU2XBNIU2TJDZKVYZR"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.vault",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::332258952501:policy/vault-vfej",
            "description": "",
            "id": "arn:aws:iam::332258952501:policy/vault-vfej",
            "name": "vault-vfej",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"ec2:DescribeInstances\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"iam:GetInstanceProfile\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"iam:GetRole\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:kms:us-east-1:*:key/b2fe096f-d275-4712-b636-109a5b0d9d86\"]}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAU2XBNIU2RUUMCPBXR",
            "tags": {},
            "tags_all": {}
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_kms_key.vault",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::332258952501:role/vault-vfej",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2023-04-13T12:37:33Z",
            "description": "",
            "force_detach_policies": false,
            "id": "vault-vfej",
            "inline_policy": [
              {
                "name": "",
                "policy": ""
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::332258952501:policy/vault-vfej"
            ],
            "max_session_duration": 3600,
            "name": "vault-vfej",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAU2XBNIU24TYL44G42"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "vault-vfej-20230413123736131100000001",
            "policy_arn": "arn:aws:iam::332258952501:policy/vault-vfej",
            "role": "vault-vfej"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.vault",
            "aws_iam_role.vault",
            "aws_kms_key.vault",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-01e1e3f0046f48453",
            "arn": "arn:aws:ec2:us-east-1:332258952501:instance/i-06ec826f1204f932f",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 1,
            "cpu_threads_per_core": 2,
            "credit_specification": [
              {
                "cpu_credits": "unlimited"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "vault-vfej",
            "id": "i-06ec826f1204f932f",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t3.large",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "instruqt-vfej",
            "launch_template": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": null,
            "primary_network_interface_id": "eni-0f31f8eeedd3661b4",
            "private_dns": "ip-10-1-3-113.ec2.internal",
            "private_ip": "10.1.3.113",
            "public_dns": "ec2-54-89-189-97.compute-1.amazonaws.com",
            "public_ip": "54.89.189.97",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0fb7554e5ff6162c5",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-00e0abdeeb6e3dfc1",
            "tags": {
              "Name": "vault"
            },
            "tags_all": {
              "Name": "vault"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "2ace4d887d54c10c9718eace4ca9f03da958141b",
            "user_data_base64": null,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-097340a2c7f9e4979"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_iam_instance_profile.vault",
            "aws_iam_role.vault",
            "aws_kms_key.vault",
            "aws_security_group.vault",
            "data.aws_ami.ubuntu",
            "data.template_file.vault",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-east-1:332258952501:key/b2fe096f-d275-4712-b636-109a5b0d9d86",
            "bypass_policy_lockout_safety_check": false,
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": 10,
            "description": "Vault vfej",
            "enable_key_rotation": false,
            "id": "b2fe096f-d275-4712-b636-109a5b0d9d86",
            "is_enabled": true,
            "key_id": "b2fe096f-d275-4712-b636-109a5b0d9d86",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::332258952501:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
            "tags": {},
            "tags_all": {}
          },
          "private": "bnVsbA==",
          "dependencies": [
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:332258952501:security-group/sg-097340a2c7f9e4979",
            "description": "vault",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-097340a2c7f9e4979",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 8200,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8200
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 8201,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8201
              },
              {
                "cidr_blocks": [
                  "10.1.0.0/16",
                  "10.2.0.0/16"
                ],
                "description": "",
                "from_port": 8301,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8301
              }
            ],
            "name": "vault",
            "name_prefix": "",
            "owner_id": "332258952501",
            "revoke_rules_on_delete": false,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-09d729a27d42ad613"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_key_vault",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "access_policy": [
              {
                "application_id": "",
                "certificate_permissions": [],
                "key_permissions": [
                  "get",
                  "list",
                  "create",
                  "delete",
                  "update",
                  "wrapKey",
                  "unwrapKey"
                ],
                "object_id": "2c783f99-c484-45ba-9074-e01494a724db",
                "secret_permissions": [],
                "storage_permissions": [],
                "tenant_id": "ab2e4aa2-3855-48b9-8d02-619cee6d9513"
              },
              {
                "application_id": "",
                "certificate_permissions": [],
                "key_permissions": [
                  "get",
                  "list",
                  "create",
                  "delete",
                  "update",
                  "wrapKey",
                  "unwrapKey"
                ],
                "object_id": "bc7160bb-b986-433b-a7e1-a6ec38982c02",
                "secret_permissions": [],
                "storage_permissions": [],
                "tenant_id": "ab2e4aa2-3855-48b9-8d02-619cee6d9513"
              }
            ],
            "contact": [],
            "enable_rbac_authorization": false,
            "enabled_for_deployment": true,
            "enabled_for_disk_encryption": true,
            "enabled_for_template_deployment": false,
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.KeyVault/vaults/vault-vfej",
            "location": "southcentralus",
            "name": "vault-vfej",
            "network_acls": [
              {
                "bypass": "AzureServices",
                "default_action": "Allow",
                "ip_rules": [],
                "virtual_network_subnet_ids": []
              }
            ],
            "purge_protection_enabled": false,
            "resource_group_name": "instruqt-vfej",
            "sku_name": "standard",
            "soft_delete_enabled": true,
            "soft_delete_retention_days": 90,
            "tags": {},
            "tenant_id": "ab2e4aa2-3855-48b9-8d02-619cee6d9513",
            "timeouts": null,
            "vault_uri": "https://vault-vfej.vault.azure.net/"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIyIn0=",
          "dependencies": [
            "data.azurerm_client_config.current",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_key_vault_access_policy",
      "name": "instruqt",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "application_id": null,
            "certificate_permissions": [],
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.KeyVault/vaults/vault-vfej/objectId/2c783f99-c484-45ba-9074-e01494a724db",
            "key_permissions": [
              "get",
              "list",
              "create",
              "delete",
              "update",
              "wrapKey",
              "unwrapKey"
            ],
            "key_vault_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.KeyVault/vaults/vault-vfej",
            "object_id": "2c783f99-c484-45ba-9074-e01494a724db",
            "secret_permissions": [],
            "storage_permissions": [],
            "tenant_id": "ab2e4aa2-3855-48b9-8d02-619cee6d9513",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_key_vault.vault",
            "data.azurerm_client_config.current",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_key_vault_access_policy",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "application_id": null,
            "certificate_permissions": [],
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.KeyVault/vaults/vault-vfej/objectId/bc7160bb-b986-433b-a7e1-a6ec38982c02",
            "key_permissions": [
              "get",
              "list",
              "create",
              "delete",
              "update",
              "wrapKey",
              "unwrapKey"
            ],
            "key_vault_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.KeyVault/vaults/vault-vfej",
            "object_id": "bc7160bb-b986-433b-a7e1-a6ec38982c02",
            "secret_permissions": [],
            "storage_permissions": [],
            "tenant_id": "ab2e4aa2-3855-48b9-8d02-619cee6d9513",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_key_vault.vault",
            "azurerm_key_vault_access_policy.instruqt",
            "azurerm_key_vault_key.vault",
            "azurerm_network_interface.vault",
            "azurerm_public_ip.vault",
            "azurerm_virtual_machine.vault",
            "data.azurerm_client_config.current",
            "data.azurerm_image.ubuntu",
            "data.azurerm_subscription.current",
            "data.template_file.azure-vault-init",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_key_vault_key",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "curve": "",
            "e": "AQAB",
            "expiration_date": null,
            "id": "https://vault-vfej.vault.azure.net/keys/vault-key-vfej/1f5b0c965ebb43c6ba0faaef5f5c0759",
            "key_opts": [
              "decrypt",
              "encrypt",
              "sign",
              "unwrapKey",
              "verify",
              "wrapKey"
            ],
            "key_size": 2048,
            "key_type": "RSA",
            "key_vault_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.KeyVault/vaults/vault-vfej",
            "n": "3OX8ueyTsewTligzkQCwDAqH1PSmiX2-WhUAPg0qKUqyNsrE-uYIiBPZhOfhAcClR3sI0tMMangFwGit0tIBKnnNTBoJw-1Noa1cgtfAWBa8xJwKx5myWNt4ugVU8VzHvnJaOw7YJ3xZe7C2OPYcnj3LA8QXuKO7e3cQ61avvCgeDLB7M216GvHTH6cDmobgwa4dLCQBLoMWFep91FXi1SMYBGcSg71UOXR28_Qa9osgqsiX-12FFMALY0Q-VaLgEHJuIlavURWKOwNUIS1b3p0BdbOVr2SxDVDjEn_wBiwGDoAmPpmc9TDyZmSdBoALglzRyC9c8tBCMdoY9QtjLQ",
            "name": "vault-key-vfej",
            "not_before_date": null,
            "tags": {},
            "timeouts": null,
            "version": "1f5b0c965ebb43c6ba0faaef5f5c0759",
            "versionless_id": "https://vault-vfej.vault.azure.net/keys/vault-key-vfej",
            "x": "",
            "y": ""
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_key_vault.vault",
            "azurerm_key_vault_access_policy.instruqt",
            "data.azurerm_client_config.current",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_network_interface",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "applied_dns_servers": [],
            "dns_servers": [],
            "enable_accelerated_networking": false,
            "enable_ip_forwarding": false,
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/networkInterfaces/vault-server-nic",
            "internal_dns_name_label": "",
            "internal_domain_name_suffix": "m5hiw5vkjwduppoxlrj5eihnia.jx.internal.cloudapp.net",
            "ip_configuration": [
              {
                "name": "config",
                "primary": true,
                "private_ip_address": "10.1.0.4",
                "private_ip_address_allocation": "Dynamic",
                "private_ip_address_version": "IPv4",
                "public_ip_address_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/publicIPAddresses/vault-server-ip",
                "subnet_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/virtualNetworks/shared-svcs-vnet/subnets/shared"
              }
            ],
            "location": "southcentralus",
            "mac_address": "00-0D-3A-EA-95-05",
            "name": "vault-server-nic",
            "private_ip_address": "10.1.0.4",
            "private_ip_addresses": [
              "10.1.0.4"
            ],
            "resource_group_name": "instruqt-vfej",
            "tags": {
              "Env": "vault-vfej",
              "Name": "vault"
            },
            "timeouts": null,
            "virtual_machine_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Compute/virtualMachines/vault-server-vm"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_public_ip.vault",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_public_ip",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_method": "Static",
            "domain_name_label": null,
            "fqdn": null,
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/publicIPAddresses/vault-server-ip",
            "idle_timeout_in_minutes": 4,
            "ip_address": "52.171.52.243",
            "ip_version": "IPv4",
            "location": "southcentralus",
            "name": "vault-server-ip",
            "public_ip_prefix_id": null,
            "resource_group_name": "instruqt-vfej",
            "reverse_fqdn": null,
            "sku": "Basic",
            "tags": {},
            "timeouts": null,
            "zones": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_role_assignment",
      "name": "vault-key-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/providers/Microsoft.Authorization/roleAssignments/463b2c8b-d153-fb7b-572c-843a4e6fd33e",
            "name": "463b2c8b-d153-fb7b-572c-843a4e6fd33e",
            "principal_id": "bc7160bb-b986-433b-a7e1-a6ec38982c02",
            "principal_type": "ServicePrincipal",
            "role_definition_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/providers/Microsoft.Authorization/roleDefinitions/00482a5a-887f-4fb3-b363-3b7fe8e74483",
            "role_definition_name": "Key Vault Administrator",
            "scope": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e",
            "skip_service_principal_aad_check": null,
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_key_vault.vault",
            "azurerm_key_vault_access_policy.instruqt",
            "azurerm_key_vault_key.vault",
            "azurerm_network_interface.vault",
            "azurerm_public_ip.vault",
            "azurerm_virtual_machine.vault",
            "data.azurerm_client_config.current",
            "data.azurerm_image.ubuntu",
            "data.azurerm_subscription.current",
            "data.template_file.azure-vault-init",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_role_assignment",
      "name": "vault-reader",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/providers/Microsoft.Authorization/roleAssignments/91a9a78b-5b37-61d0-a048-c33342d00421",
            "name": "91a9a78b-5b37-61d0-a048-c33342d00421",
            "principal_id": "bc7160bb-b986-433b-a7e1-a6ec38982c02",
            "principal_type": "ServicePrincipal",
            "role_definition_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7",
            "role_definition_name": "Reader",
            "scope": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e",
            "skip_service_principal_aad_check": null,
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_key_vault.vault",
            "azurerm_key_vault_access_policy.instruqt",
            "azurerm_key_vault_key.vault",
            "azurerm_network_interface.vault",
            "azurerm_public_ip.vault",
            "azurerm_virtual_machine.vault",
            "data.azurerm_client_config.current",
            "data.azurerm_image.ubuntu",
            "data.azurerm_subscription.current",
            "data.template_file.azure-vault-init",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_virtual_machine",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "additional_capabilities": [],
            "availability_set_id": null,
            "boot_diagnostics": [],
            "delete_data_disks_on_termination": true,
            "delete_os_disk_on_termination": true,
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Compute/virtualMachines/vault-server-vm",
            "identity": [
              {
                "identity_ids": [],
                "principal_id": "bc7160bb-b986-433b-a7e1-a6ec38982c02",
                "type": "SystemAssigned"
              }
            ],
            "license_type": null,
            "location": "southcentralus",
            "name": "vault-server-vm",
            "network_interface_ids": [
              "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/networkInterfaces/vault-server-nic"
            ],
            "os_profile": [
              {
                "admin_password": "",
                "admin_username": "ubuntu",
                "computer_name": "vault-server-0",
                "custom_data": ""
              }
            ],
            "os_profile_linux_config": [
              {
                "disable_password_authentication": true,
                "ssh_keys": [
                  {
                    "key_data": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxMiAazJkJREhUbnslhf0urtOdHQTImR0Ko3TOWjVCb55HTwj1/LwRATDiL+0RHWiCL4S8zU2KvlBb9huj/PSRo64I3wRjHREy6GHM1uqm/OXgxidvemkY5bZzUmJ9cohj1ItbMcH+LiPTfrmAkIsdsgVfCeLWco2UO7PkwVv2757gIOsFd9ybOwlmnlaM3DiBmD5VO5APIacUwfSv3Ol8sQs3hpaxUON6e65+MA1voa1Kd7PlXE9a3NUKBfk9BwgQ9Cobbo9pSU9V+p7T9ClDd7jCqseeHwketltG14R7mSO9zB+CPLCRxz6GkueHitD0LT0y2itmL5hkiyuK9PJJ",
                    "path": "/home/ubuntu/.ssh/authorized_keys"
                  }
                ]
              }
            ],
            "os_profile_secrets": [],
            "os_profile_windows_config": [],
            "plan": [],
            "primary_network_interface_id": null,
            "proximity_placement_group_id": null,
            "resource_group_name": "instruqt-vfej",
            "storage_data_disk": [],
            "storage_image_reference": [
              {
                "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/packer/providers/Microsoft.Compute/images/hashistack-2023-04-13",
                "offer": "",
                "publisher": "",
                "sku": "",
                "version": ""
              }
            ],
            "storage_os_disk": [
              {
                "caching": "ReadWrite",
                "create_option": "FromImage",
                "disk_size_gb": 30,
                "image_uri": "",
                "managed_disk_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Compute/disks/vault-disk",
                "managed_disk_type": "Standard_LRS",
                "name": "vault-disk",
                "os_type": "Linux",
                "vhd_uri": "",
                "write_accelerator_enabled": false
              }
            ],
            "tags": {
              "Env": "vault-vfej",
              "Name": "vault"
            },
            "timeouts": null,
            "vm_size": "Standard_DS2_v2",
            "zones": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_key_vault.vault",
            "azurerm_key_vault_access_policy.instruqt",
            "azurerm_key_vault_key.vault",
            "azurerm_network_interface.vault",
            "azurerm_public_ip.vault",
            "data.azurerm_client_config.current",
            "data.azurerm_image.ubuntu",
            "data.azurerm_subscription.current",
            "data.template_file.azure-vault-init",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    }
  ]
}
