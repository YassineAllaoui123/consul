{
  "version": 4,
  "terraform_version": "0.13.5",
  "serial": 7,
  "lineage": "ce18479a-63e5-317d-cac6-fd71e72f5d79",
  "outputs": {
    "azure_consul_public_ip": {
      "value": "157.55.190.108",
      "type": "string"
    },
    "azure_mgw_public_ip": {
      "value": "40.84.145.201",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "azurerm_image",
      "name": "ubuntu",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "data_disk": [],
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/packer/providers/Microsoft.Compute/images/hashistack-2023-04-13",
            "location": "southcentralus",
            "name": "hashistack-2023-04-13",
            "name_regex": "hashistack-*",
            "os_disk": [
              {
                "blob_uri": "",
                "caching": "ReadWrite",
                "managed_disk_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/pkr-Resource-Group-mw3b8rzom0/providers/Microsoft.Compute/disks/pkrosmw3b8rzom0",
                "os_state": "Generalized",
                "os_type": "Linux",
                "size_gb": 30
              }
            ],
            "resource_group_name": "packer",
            "sort_descending": false,
            "tags": {
              "name": "Hashistack",
              "os": "ubuntu",
              "os-version": "bionic"
            },
            "timeouts": null,
            "zone_resilient": false
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "azurerm_subscription",
      "name": "primary",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "display_name": "Instruqt Subscription ztjpztn13ziq",
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e",
            "location_placement_id": "Public_2014-09-01",
            "quota_id": "EnterpriseAgreement_2014-09-01",
            "spending_limit": "Off",
            "state": "Enabled",
            "subscription_id": "37bc21fd-d0f5-46a3-8802-d5136be12b7e",
            "tags": {},
            "tenant_id": "ab2e4aa2-3855-48b9-8d02-619cee6d9513",
            "timeouts": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "azure-mgw-init",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "96dcd692326f49f9f52cf759796a21682bbf9f30d89d3c873d53829aa1a3051b",
            "rendered": "#!/bin/bash\n# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n\n#metadata\nlocal_ipv4=\"$(curl -s -H Metadata:true --noproxy \"*\" \"http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/privateIpAddress?api-version=2017-08-01\u0026format=text\")\"\npublic_ipv4=\"$(curl -s -H Metadata:true --noproxy \"*\" \"http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-08-01\u0026format=text\")\"\n\n#vault\naz login --identity\nexport VAULT_ADDR=\"http://$(az vm show -g $(curl -s -H Metadata:true \"http://169.254.169.254/metadata/instance?api-version=2017-08-01\" | jq -r '.compute | .resourceGroupName') -n vault-server-vm -d | jq -r .privateIps):8200\"\n\n#dirs\nmkdir -p /etc/vault-agent.d/\nmkdir -p /opt/consul/tls/\nchown -R consul:consul /opt/consul/\nchown -R consul:consul /etc/consul.d/\n\n#vault-agent\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-ca-template.ctmpl\n{{ with secret \"pki/cert/ca\" }}{{ .Data.certificate }}{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-acl-template.ctmpl\nacl = {\n  enabled        = true\n  default_policy = \"deny\"\n  down_policy   = \"extend-cache\"\n  enable_token_persistence = true\n  enable_token_replication = true\n  tokens {\n    agent  = {{ with secret \"consul/creds/agent\" }}\"{{ .Data.token }}\"{{ end }}\n  }\n}\nencrypt = {{ with secret \"kv/consul\" }}\"{{ .Data.data.gossip_key }}\"{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/envoy-token-template.ctmpl\n{{ with secret \"consul/creds/mgw\" }}{{ .Data.token }}{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault.hcl\npid_file = \"/var/run/vault-agent-pidfile\"\nauto_auth {\n  method \"azure\" {\n      mount_path = \"auth/azure\"\n      config = {\n          role = \"consul\"\n          resource = \"https://management.azure.com/\"\n      }\n  }\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-ca-template.ctmpl\"\n  destination = \"/opt/consul/tls/ca-cert.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-acl-template.ctmpl\"\n  destination = \"/etc/consul.d/acl.hcl\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/envoy-token-template.ctmpl\"\n  destination = \"/etc/envoy/consul.token\"\n  command     = \"sudo service envoy restart\"\n}\nvault {\n  address = \"${VAULT_ADDR}\"\n}\nEOF\ncat \u003c\u003cEOF \u003e /etc/systemd/system/vault-agent.service\n[Unit]\nDescription=Envoy\nAfter=network-online.target\nWants=consul.service\n[Service]\nExecStart=/usr/bin/vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug\nRestart=always\nRestartSec=5\nStartLimitIntervalSec=0\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug -exit-after-auth\n\n#consul\ncat \u003c\u003cEOF\u003e /etc/consul.d/consul.hcl\ndatacenter = \"azure-west-us-2\"\nprimary_datacenter = \"aws-us-east-1\"\nadvertise_addr = \"${local_ipv4}\"\nclient_addr = \"0.0.0.0\"\nui = true\nconnect = {\n  enabled = true\n}\ndata_dir = \"/opt/consul/data\"\nlog_level = \"INFO\"\nports = {\n  grpc = 8502\n}\nretry_join = [\"provider=azure tag_name=Env tag_value=consul-vfej subscription_id=37bc21fd-d0f5-46a3-8802-d5136be12b7e\"]\nEOF\ncat \u003c\u003cEOF\u003e /etc/consul.d/tls.hcl\nca_file = \"/opt/consul/tls/ca-cert.pem\"\nverify_incoming = false\nverify_outgoing = true\nverify_server_hostname = true\nauto_encrypt = {\n  tls = true\n}\nEOF\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n#envoy mgw\ncat \u003c\u003cEOF \u003e /etc/systemd/system/envoy.service\n[Unit]\nDescription=Envoy\nAfter=network-online.target\nWants=consul.service\n[Service]\nExecStart=/usr/bin/consul connect envoy -expose-servers -gateway=mesh -register -service \"mesh-gateway\" -address \"${local_ipv4}:443\" -wan-address \"${public_ipv4}:443\" -token-file /etc/envoy/consul.token -- -l debug\nRestart=always\nRestartSec=5\nStartLimitIntervalSec=0\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo systemctl enable envoy.service\nsudo systemctl start envoy.service\n\n#start the vault-agent\nsleep 30\nsudo systemctl enable vault-agent.service\nsudo systemctl start vault-agent.service\n\nexit 0\n",
            "template": "#!/bin/bash\n# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n\n#metadata\nlocal_ipv4=\"$(curl -s -H Metadata:true --noproxy \"*\" \"http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/privateIpAddress?api-version=2017-08-01\u0026format=text\")\"\npublic_ipv4=\"$(curl -s -H Metadata:true --noproxy \"*\" \"http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-08-01\u0026format=text\")\"\n\n#vault\naz login --identity\nexport VAULT_ADDR=\"http://$(az vm show -g $(curl -s -H Metadata:true \"http://169.254.169.254/metadata/instance?api-version=2017-08-01\" | jq -r '.compute | .resourceGroupName') -n vault-server-vm -d | jq -r .privateIps):8200\"\n\n#dirs\nmkdir -p /etc/vault-agent.d/\nmkdir -p /opt/consul/tls/\nchown -R consul:consul /opt/consul/\nchown -R consul:consul /etc/consul.d/\n\n#vault-agent\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-ca-template.ctmpl\n{{ with secret \"pki/cert/ca\" }}{{ .Data.certificate }}{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-acl-template.ctmpl\nacl = {\n  enabled        = true\n  default_policy = \"deny\"\n  down_policy   = \"extend-cache\"\n  enable_token_persistence = true\n  enable_token_replication = true\n  tokens {\n    agent  = {{ with secret \"consul/creds/agent\" }}\"{{ .Data.token }}\"{{ end }}\n  }\n}\nencrypt = {{ with secret \"kv/consul\" }}\"{{ .Data.data.gossip_key }}\"{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/envoy-token-template.ctmpl\n{{ with secret \"consul/creds/mgw\" }}{{ .Data.token }}{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault.hcl\npid_file = \"/var/run/vault-agent-pidfile\"\nauto_auth {\n  method \"azure\" {\n      mount_path = \"auth/azure\"\n      config = {\n          role = \"consul\"\n          resource = \"https://management.azure.com/\"\n      }\n  }\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-ca-template.ctmpl\"\n  destination = \"/opt/consul/tls/ca-cert.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-acl-template.ctmpl\"\n  destination = \"/etc/consul.d/acl.hcl\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/envoy-token-template.ctmpl\"\n  destination = \"/etc/envoy/consul.token\"\n  command     = \"sudo service envoy restart\"\n}\nvault {\n  address = \"$${VAULT_ADDR}\"\n}\nEOF\ncat \u003c\u003cEOF \u003e /etc/systemd/system/vault-agent.service\n[Unit]\nDescription=Envoy\nAfter=network-online.target\nWants=consul.service\n[Service]\nExecStart=/usr/bin/vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug\nRestart=always\nRestartSec=5\nStartLimitIntervalSec=0\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug -exit-after-auth\n\n#consul\ncat \u003c\u003cEOF\u003e /etc/consul.d/consul.hcl\ndatacenter = \"azure-west-us-2\"\nprimary_datacenter = \"aws-us-east-1\"\nadvertise_addr = \"$${local_ipv4}\"\nclient_addr = \"0.0.0.0\"\nui = true\nconnect = {\n  enabled = true\n}\ndata_dir = \"/opt/consul/data\"\nlog_level = \"INFO\"\nports = {\n  grpc = 8502\n}\nretry_join = [\"provider=azure tag_name=Env tag_value=consul-${env} subscription_id=${subscription_id}\"]\nEOF\ncat \u003c\u003cEOF\u003e /etc/consul.d/tls.hcl\nca_file = \"/opt/consul/tls/ca-cert.pem\"\nverify_incoming = false\nverify_outgoing = true\nverify_server_hostname = true\nauto_encrypt = {\n  tls = true\n}\nEOF\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n#envoy mgw\ncat \u003c\u003cEOF \u003e /etc/systemd/system/envoy.service\n[Unit]\nDescription=Envoy\nAfter=network-online.target\nWants=consul.service\n[Service]\nExecStart=/usr/bin/consul connect envoy -expose-servers -gateway=mesh -register -service \"mesh-gateway\" -address \"$${local_ipv4}:443\" -wan-address \"$${public_ipv4}:443\" -token-file /etc/envoy/consul.token -- -l debug\nRestart=always\nRestartSec=5\nStartLimitIntervalSec=0\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo systemctl enable envoy.service\nsudo systemctl start envoy.service\n\n#start the vault-agent\nsleep 30\nsudo systemctl enable vault-agent.service\nsudo systemctl start vault-agent.service\n\nexit 0\n",
            "vars": {
              "ca_cert": "test",
              "env": "vfej",
              "subscription_id": "37bc21fd-d0f5-46a3-8802-d5136be12b7e"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "azure-server-init",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "257698322ddd39d95c02f81ca62f87f9bee1e883c15d70340a5c563278bd8b40",
            "rendered": "#!/bin/bash\n# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n\n#metadata\nlocal_ipv4=$(curl -H Metadata:true --noproxy \"*\" \"http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/privateIpAddress?api-version=2017-08-01\u0026format=text\")\n\n#vault\naz login --identity\nexport VAULT_ADDR=\"http://$(az vm show -g $(curl -s -H Metadata:true \"http://169.254.169.254/metadata/instance?api-version=2017-08-01\" | jq -r '.compute | .resourceGroupName') -n vault-server-vm -d | jq -r .publicIps):8200\"\nexport VAULT_TOKEN=$(vault write -field=token auth/azure/login -field=token role=\"consul\" \\\n     jwt=\"$(curl -s 'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01\u0026resource=https%3A%2F%2Fmanagement.azure.com%2F' -H Metadata:true | jq -r '.access_token')\")\nCONNECT_TOKEN=$(vault token create -field token -policy connect -period 8h -orphan)\n\n#dirs\nmkdir -p /etc/vault-agent.d/\nmkdir -p /opt/consul/tls/\nchown -R consul:consul /opt/consul/\nchown -R consul:consul /etc/consul.d/\n\n#vault-agent\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-ca-template.ctmpl\n{{ with secret \"pki/cert/ca\" }}\n{{ .Data.certificate }}\n{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-cert-template.ctmpl\n{{ with secret \"pki/issue/consul\" \"common_name=consul-server-0.server.azure-west-us-2.consul\" \"alt_names=consul-server-0.server.azure-west-us-2.consul,server.azure-west-us-2.consul,localhost\" \"ip_sans=127.0.0.1\" \"key_usage=DigitalSignature,KeyEncipherment\" \"ext_key_usage=ServerAuth,ClientAuth\" }}\n{{ .Data.certificate }}\n{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-key-template.ctmpl\n{{ with secret \"pki/issue/consul\" \"common_name=consul-server-0.server.azure-west-us-2.consul\" \"alt_names=consul-server-0.server.azure-west-us-2.consul,server.azure-west-us-2.consul,localhost\" \"ip_sans=127.0.0.1\" \"key_usage=DigitalSignature,KeyEncipherment\" \"ext_key_usage=ServerAuth,ClientAuth\" }}\n{{ .Data.private_key }}\n{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-acl-template.ctmpl\nacl = {\n  enabled        = true\n  default_policy = \"deny\"\n  down_policy   = \"extend-cache\"\n  enable_token_persistence = true\n  enable_token_replication = true\n  tokens {\n    agent  = {{ with secret \"consul/creds/replication\" }}\"{{ .Data.token }}\"{{ end }}\n    replication = {{ with secret \"consul/creds/replication\" }}\"{{ .Data.token }}\"{{ end }}\n  }\n}\nencrypt = {{ with secret \"kv/consul\" }}\"{{ .Data.data.gossip_key }}\"{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault.hcl\npid_file = \"/var/run/vault-agent-pidfile\"\nauto_auth {\n  method \"azure\" {\n      mount_path = \"auth/azure\"\n      config = {\n          role = \"consul\"\n          resource = \"https://management.azure.com/\"\n      }\n  }\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-ca-template.ctmpl\"\n  destination = \"/opt/consul/tls/ca-cert.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-cert-template.ctmpl\"\n  destination = \"/opt/consul/tls/server-cert.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-key-template.ctmpl\"\n  destination = \"/opt/consul/tls/server-key.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-acl-template.ctmpl\"\n  destination = \"/etc/consul.d/acl.hcl\"\n  command     = \"sudo service consul reload\"\n}\nvault {\n  address = \"${VAULT_ADDR}\"\n}\nEOF\ncat \u003c\u003cEOF \u003e /etc/systemd/system/vault-agent.service\n[Unit]\nDescription=Envoy\nAfter=network-online.target\nWants=consul.service\n[Service]\nExecStart=/usr/bin/vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug\nRestart=always\nRestartSec=5\nStartLimitIntervalSec=0\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug -exit-after-auth\n\n#consul\ncat \u003c\u003cEOF\u003e /etc/consul.d/server.json\n{\n  \"datacenter\": \"azure-west-us-2\",\n  \"primary_datacenter\": \"aws-us-east-1\",\n  \"server\": true,\n  \"bootstrap_expect\": 1,\n  \"advertise_addr\": \"${local_ipv4}\",\n  \"data_dir\": \"/opt/consul/data\",\n  \"client_addr\": \"0.0.0.0\",\n  \"log_level\": \"INFO\",\n  \"node_name\": \"consul-server-0\",\n  \"ui\": true,\n  \"primary_gateways\" : [\"34.201.63.113:443\"],\n  \"license_path\": \"/etc/consul.d/consul.hclic\",\n  \"connect\": {\n    \"enable_mesh_gateway_wan_federation\": true,\n    \"enabled\": true,\n    \"ca_provider\": \"vault\",\n    \"ca_config\": {\n      \"address\": \"${VAULT_ADDR}\",\n      \"token\": \"${CONNECT_TOKEN}\",\n      \"root_pki_path\": \"connect-root/\",\n      \"intermediate_pki_path\": \"connect-intermediate-west/\"\n    }\n  }\n}\nEOF\ncat \u003c\u003cEOF\u003e /etc/consul.d/tls.json\n{\n  \"verify_incoming_rpc\": true,\n  \"verify_outgoing\": true,\n  \"verify_server_hostname\": true,\n  \"ca_file\": \"/opt/consul/tls/ca-cert.pem\",\n  \"cert_file\": \"/opt/consul/tls/server-cert.pem\",\n  \"key_file\": \"/opt/consul/tls/server-key.pem\",\n  \"auto_encrypt\": {\n    \"allow_tls\": true\n  }\n}\nEOF\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n#start the vault-agent\nsleep 30\nsudo systemctl enable vault-agent.service\nsudo systemctl start vault-agent.service\n\nexit 0\n",
            "template": "#!/bin/bash\n# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n\n#metadata\nlocal_ipv4=$(curl -H Metadata:true --noproxy \"*\" \"http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/privateIpAddress?api-version=2017-08-01\u0026format=text\")\n\n#vault\naz login --identity\nexport VAULT_ADDR=\"http://$(az vm show -g $(curl -s -H Metadata:true \"http://169.254.169.254/metadata/instance?api-version=2017-08-01\" | jq -r '.compute | .resourceGroupName') -n vault-server-vm -d | jq -r .publicIps):8200\"\nexport VAULT_TOKEN=$(vault write -field=token auth/azure/login -field=token role=\"consul\" \\\n     jwt=\"$(curl -s 'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01\u0026resource=https%3A%2F%2Fmanagement.azure.com%2F' -H Metadata:true | jq -r '.access_token')\")\nCONNECT_TOKEN=$(vault token create -field token -policy connect -period 8h -orphan)\n\n#dirs\nmkdir -p /etc/vault-agent.d/\nmkdir -p /opt/consul/tls/\nchown -R consul:consul /opt/consul/\nchown -R consul:consul /etc/consul.d/\n\n#vault-agent\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-ca-template.ctmpl\n{{ with secret \"pki/cert/ca\" }}\n{{ .Data.certificate }}\n{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-cert-template.ctmpl\n{{ with secret \"pki/issue/consul\" \"common_name=consul-server-0.server.azure-west-us-2.consul\" \"alt_names=consul-server-0.server.azure-west-us-2.consul,server.azure-west-us-2.consul,localhost\" \"ip_sans=127.0.0.1\" \"key_usage=DigitalSignature,KeyEncipherment\" \"ext_key_usage=ServerAuth,ClientAuth\" }}\n{{ .Data.certificate }}\n{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-key-template.ctmpl\n{{ with secret \"pki/issue/consul\" \"common_name=consul-server-0.server.azure-west-us-2.consul\" \"alt_names=consul-server-0.server.azure-west-us-2.consul,server.azure-west-us-2.consul,localhost\" \"ip_sans=127.0.0.1\" \"key_usage=DigitalSignature,KeyEncipherment\" \"ext_key_usage=ServerAuth,ClientAuth\" }}\n{{ .Data.private_key }}\n{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/consul-acl-template.ctmpl\nacl = {\n  enabled        = true\n  default_policy = \"deny\"\n  down_policy   = \"extend-cache\"\n  enable_token_persistence = true\n  enable_token_replication = true\n  tokens {\n    agent  = {{ with secret \"consul/creds/replication\" }}\"{{ .Data.token }}\"{{ end }}\n    replication = {{ with secret \"consul/creds/replication\" }}\"{{ .Data.token }}\"{{ end }}\n  }\n}\nencrypt = {{ with secret \"kv/consul\" }}\"{{ .Data.data.gossip_key }}\"{{ end }}\nEOF\ncat \u003c\u003cEOF\u003e /etc/vault-agent.d/vault.hcl\npid_file = \"/var/run/vault-agent-pidfile\"\nauto_auth {\n  method \"azure\" {\n      mount_path = \"auth/azure\"\n      config = {\n          role = \"consul\"\n          resource = \"https://management.azure.com/\"\n      }\n  }\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-ca-template.ctmpl\"\n  destination = \"/opt/consul/tls/ca-cert.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-cert-template.ctmpl\"\n  destination = \"/opt/consul/tls/server-cert.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-key-template.ctmpl\"\n  destination = \"/opt/consul/tls/server-key.pem\"\n  command     = \"sudo service consul reload\"\n}\ntemplate {\n  source      = \"/etc/vault-agent.d/consul-acl-template.ctmpl\"\n  destination = \"/etc/consul.d/acl.hcl\"\n  command     = \"sudo service consul reload\"\n}\nvault {\n  address = \"$${VAULT_ADDR}\"\n}\nEOF\ncat \u003c\u003cEOF \u003e /etc/systemd/system/vault-agent.service\n[Unit]\nDescription=Envoy\nAfter=network-online.target\nWants=consul.service\n[Service]\nExecStart=/usr/bin/vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug\nRestart=always\nRestartSec=5\nStartLimitIntervalSec=0\n[Install]\nWantedBy=multi-user.target\nEOF\nsudo vault agent -config=/etc/vault-agent.d/vault.hcl -log-level=debug -exit-after-auth\n\n#consul\ncat \u003c\u003cEOF\u003e /etc/consul.d/server.json\n{\n  \"datacenter\": \"azure-west-us-2\",\n  \"primary_datacenter\": \"aws-us-east-1\",\n  \"server\": true,\n  \"bootstrap_expect\": 1,\n  \"advertise_addr\": \"$${local_ipv4}\",\n  \"data_dir\": \"/opt/consul/data\",\n  \"client_addr\": \"0.0.0.0\",\n  \"log_level\": \"INFO\",\n  \"node_name\": \"consul-server-0\",\n  \"ui\": true,\n  \"primary_gateways\" : [\"${primary_wan_gateway}\"],\n  \"license_path\": \"/etc/consul.d/consul.hclic\",\n  \"connect\": {\n    \"enable_mesh_gateway_wan_federation\": true,\n    \"enabled\": true,\n    \"ca_provider\": \"vault\",\n    \"ca_config\": {\n      \"address\": \"$${VAULT_ADDR}\",\n      \"token\": \"$${CONNECT_TOKEN}\",\n      \"root_pki_path\": \"connect-root/\",\n      \"intermediate_pki_path\": \"connect-intermediate-west/\"\n    }\n  }\n}\nEOF\ncat \u003c\u003cEOF\u003e /etc/consul.d/tls.json\n{\n  \"verify_incoming_rpc\": true,\n  \"verify_outgoing\": true,\n  \"verify_server_hostname\": true,\n  \"ca_file\": \"/opt/consul/tls/ca-cert.pem\",\n  \"cert_file\": \"/opt/consul/tls/server-cert.pem\",\n  \"key_file\": \"/opt/consul/tls/server-key.pem\",\n  \"auto_encrypt\": {\n    \"allow_tls\": true\n  }\n}\nEOF\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n#start the vault-agent\nsleep 30\nsudo systemctl enable vault-agent.service\nsudo systemctl start vault-agent.service\n\nexit 0\n",
            "vars": {
              "ca_cert": "test",
              "cert": "test",
              "key": "test",
              "primary_wan_gateway": "34.201.63.113:443"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "terraform_remote_state",
      "name": "consul-primary",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "local",
            "config": {
              "value": {
                "path": "../aws-consul-primary/terraform.tfstate"
              },
              "type": [
                "object",
                {
                  "path": "string"
                }
              ]
            },
            "defaults": null,
            "outputs": {
              "value": {
                "aws_consul_public_ip": "3.80.228.37",
                "aws_mgw_public_ip": "34.201.63.113"
              },
              "type": [
                "object",
                {
                  "aws_consul_public_ip": "string",
                  "aws_mgw_public_ip": "string"
                }
              ]
            },
            "workspace": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "terraform_remote_state",
      "name": "iam",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "local",
            "config": {
              "value": {
                "path": "../iam/terraform.tfstate"
              },
              "type": [
                "object",
                {
                  "path": "string"
                }
              ]
            },
            "defaults": null,
            "outputs": {
              "value": {
                "aws_consul_iam_instance_profile_name": "consul-vfej",
                "aws_consul_iam_role_arn": "arn:aws:iam::332258952501:role/consul-vfej",
                "aws_cts_iam_instance_profile_name": "cts-vfej",
                "aws_cts_iam_role_arn": "arn:aws:iam::332258952501:role/cts-vfej",
                "aws_nomad_iam_instance_profile_name": "nomad-vfej",
                "aws_nomad_iam_role_arn": "arn:aws:iam::332258952501:role/nomad-vfej",
                "azure_consul_user_assigned_identity_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.ManagedIdentity/userAssignedIdentities/consul-vfej",
                "azure_consul_user_assigned_identity_name": "consul-vfej",
                "azure_consul_user_assigned_identity_principal_id": "fbb7256b-225e-42f6-8db0-efd3e176d19e",
                "azure_product_api_user_assigned_identity_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.ManagedIdentity/userAssignedIdentities/product-api-vfej",
                "azure_product_api_user_assigned_identity_name": "product-api-vfej",
                "azure_product_api_user_assigned_identity_principal_id": "efb6b0ac-81cb-46e3-bb01-0d2ebc1385e0",
                "gcp_consul_service_account_email": "consul-vfej@p-vog23x9oea5u-0.iam.gserviceaccount.com"
              },
              "type": [
                "object",
                {
                  "aws_consul_iam_instance_profile_name": "string",
                  "aws_consul_iam_role_arn": "string",
                  "aws_cts_iam_instance_profile_name": "string",
                  "aws_cts_iam_role_arn": "string",
                  "aws_nomad_iam_instance_profile_name": "string",
                  "aws_nomad_iam_role_arn": "string",
                  "azure_consul_user_assigned_identity_id": "string",
                  "azure_consul_user_assigned_identity_name": "string",
                  "azure_consul_user_assigned_identity_principal_id": "string",
                  "azure_product_api_user_assigned_identity_id": "string",
                  "azure_product_api_user_assigned_identity_name": "string",
                  "azure_product_api_user_assigned_identity_principal_id": "string",
                  "gcp_consul_service_account_email": "string"
                }
              ]
            },
            "workspace": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "terraform_remote_state",
      "name": "infra",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "local",
            "config": {
              "value": {
                "path": "../infra/terraform.tfstate"
              },
              "type": [
                "object",
                {
                  "path": "string"
                }
              ]
            },
            "defaults": null,
            "outputs": {
              "value": {
                "aws_shared_svcs_private_subnets": [
                  "subnet-0f28b3e2ffeb6c850",
                  "subnet-02954e54ad1f182d6",
                  "subnet-04a046c94626becbd"
                ],
                "aws_shared_svcs_public_subnets": [
                  "subnet-00e0abdeeb6e3dfc1",
                  "subnet-04d2924304f7e501c",
                  "subnet-0218dec6dd57ff1a8"
                ],
                "aws_shared_svcs_vpc": "vpc-09d729a27d42ad613",
                "aws_ssh_key_name": "instruqt-vfej",
                "azure_app_public_subnets": [
                  "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/virtualNetworks/app-vnet/subnets/app"
                ],
                "azure_rg_location": "southcentralus",
                "azure_rg_name": "instruqt-vfej",
                "azure_shared_svcs_public_subnets": [
                  "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/virtualNetworks/shared-svcs-vnet/subnets/shared"
                ],
                "env": "vfej",
                "gcp_shared_svcs_network_self_link": "https://www.googleapis.com/compute/v1/projects/p-vog23x9oea5u-0/global/networks/vpc-shared-svcs"
              },
              "type": [
                "object",
                {
                  "aws_shared_svcs_private_subnets": [
                    "tuple",
                    [
                      "string",
                      "string",
                      "string"
                    ]
                  ],
                  "aws_shared_svcs_public_subnets": [
                    "tuple",
                    [
                      "string",
                      "string",
                      "string"
                    ]
                  ],
                  "aws_shared_svcs_vpc": "string",
                  "aws_ssh_key_name": "string",
                  "azure_app_public_subnets": [
                    "tuple",
                    [
                      "string"
                    ]
                  ],
                  "azure_rg_location": "string",
                  "azure_rg_name": "string",
                  "azure_shared_svcs_public_subnets": [
                    "tuple",
                    [
                      "string"
                    ]
                  ],
                  "env": "string",
                  "gcp_shared_svcs_network_self_link": "string"
                }
              ]
            },
            "workspace": null
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_network_interface",
      "name": "consul",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "applied_dns_servers": [],
            "dns_servers": [],
            "enable_accelerated_networking": false,
            "enable_ip_forwarding": false,
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/networkInterfaces/consul-server-nic",
            "internal_dns_name_label": "",
            "internal_domain_name_suffix": "m5hiw5vkjwduppoxlrj5eihnia.jx.internal.cloudapp.net",
            "ip_configuration": [
              {
                "name": "config",
                "primary": true,
                "private_ip_address": "10.1.0.5",
                "private_ip_address_allocation": "Dynamic",
                "private_ip_address_version": "IPv4",
                "public_ip_address_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/publicIPAddresses/consul-server-ip",
                "subnet_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/virtualNetworks/shared-svcs-vnet/subnets/shared"
              }
            ],
            "location": "southcentralus",
            "mac_address": "",
            "name": "consul-server-nic",
            "private_ip_address": "10.1.0.5",
            "private_ip_addresses": [
              "10.1.0.5"
            ],
            "resource_group_name": "instruqt-vfej",
            "tags": {
              "Env": "consul-vfej",
              "Name": "consul"
            },
            "timeouts": null,
            "virtual_machine_id": ""
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_public_ip.consul",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_network_interface",
      "name": "consul-mgw",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "applied_dns_servers": [],
            "dns_servers": [],
            "enable_accelerated_networking": false,
            "enable_ip_forwarding": false,
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/networkInterfaces/consul-mgw-nic",
            "internal_dns_name_label": "",
            "internal_domain_name_suffix": "m5hiw5vkjwduppoxlrj5eihnia.jx.internal.cloudapp.net",
            "ip_configuration": [
              {
                "name": "config",
                "primary": true,
                "private_ip_address": "10.1.0.6",
                "private_ip_address_allocation": "Dynamic",
                "private_ip_address_version": "IPv4",
                "public_ip_address_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/publicIPAddresses/consul-mgw-ip",
                "subnet_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/virtualNetworks/shared-svcs-vnet/subnets/shared"
              }
            ],
            "location": "southcentralus",
            "mac_address": "",
            "name": "consul-mgw-nic",
            "private_ip_address": "10.1.0.6",
            "private_ip_addresses": [
              "10.1.0.6"
            ],
            "resource_group_name": "instruqt-vfej",
            "tags": {
              "Env": "consul-vfej",
              "Name": "consul"
            },
            "timeouts": null,
            "virtual_machine_id": ""
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_public_ip.mgw",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_public_ip",
      "name": "consul",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_method": "Static",
            "domain_name_label": null,
            "fqdn": null,
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/publicIPAddresses/consul-server-ip",
            "idle_timeout_in_minutes": 4,
            "ip_address": "157.55.190.108",
            "ip_version": "IPv4",
            "location": "southcentralus",
            "name": "consul-server-ip",
            "public_ip_prefix_id": null,
            "resource_group_name": "instruqt-vfej",
            "reverse_fqdn": null,
            "sku": "Basic",
            "tags": null,
            "timeouts": null,
            "zones": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_public_ip",
      "name": "mgw",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_method": "Static",
            "domain_name_label": null,
            "fqdn": null,
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/publicIPAddresses/consul-mgw-ip",
            "idle_timeout_in_minutes": 4,
            "ip_address": "40.84.145.201",
            "ip_version": "IPv4",
            "location": "southcentralus",
            "name": "consul-mgw-ip",
            "public_ip_prefix_id": null,
            "resource_group_name": "instruqt-vfej",
            "reverse_fqdn": null,
            "sku": "Basic",
            "tags": null,
            "timeouts": null,
            "zones": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_virtual_machine",
      "name": "consul",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "additional_capabilities": [],
            "availability_set_id": null,
            "boot_diagnostics": [],
            "delete_data_disks_on_termination": true,
            "delete_os_disk_on_termination": true,
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Compute/virtualMachines/consul-server-vm",
            "identity": [
              {
                "identity_ids": [
                  "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.ManagedIdentity/userAssignedIdentities/consul-vfej"
                ],
                "principal_id": "",
                "type": "UserAssigned"
              }
            ],
            "license_type": null,
            "location": "southcentralus",
            "name": "consul-server-vm",
            "network_interface_ids": [
              "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/networkInterfaces/consul-server-nic"
            ],
            "os_profile": [
              {
                "admin_password": "",
                "admin_username": "ubuntu",
                "computer_name": "consul-server-0",
                "custom_data": "6d1be41e1b26c562f6fe5ef4027f8f0e2f834dad"
              }
            ],
            "os_profile_linux_config": [
              {
                "disable_password_authentication": true,
                "ssh_keys": [
                  {
                    "key_data": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxMiAazJkJREhUbnslhf0urtOdHQTImR0Ko3TOWjVCb55HTwj1/LwRATDiL+0RHWiCL4S8zU2KvlBb9huj/PSRo64I3wRjHREy6GHM1uqm/OXgxidvemkY5bZzUmJ9cohj1ItbMcH+LiPTfrmAkIsdsgVfCeLWco2UO7PkwVv2757gIOsFd9ybOwlmnlaM3DiBmD5VO5APIacUwfSv3Ol8sQs3hpaxUON6e65+MA1voa1Kd7PlXE9a3NUKBfk9BwgQ9Cobbo9pSU9V+p7T9ClDd7jCqseeHwketltG14R7mSO9zB+CPLCRxz6GkueHitD0LT0y2itmL5hkiyuK9PJJ",
                    "path": "/home/ubuntu/.ssh/authorized_keys"
                  }
                ]
              }
            ],
            "os_profile_secrets": [],
            "os_profile_windows_config": [],
            "plan": [],
            "primary_network_interface_id": null,
            "proximity_placement_group_id": null,
            "resource_group_name": "instruqt-vfej",
            "storage_data_disk": [],
            "storage_image_reference": [
              {
                "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/packer/providers/Microsoft.Compute/images/hashistack-2023-04-13",
                "offer": "",
                "publisher": "",
                "sku": "",
                "version": ""
              }
            ],
            "storage_os_disk": [
              {
                "caching": "ReadWrite",
                "create_option": "FromImage",
                "disk_size_gb": 30,
                "image_uri": "",
                "managed_disk_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Compute/disks/consul-disk",
                "managed_disk_type": "Standard_LRS",
                "name": "consul-disk",
                "os_type": "Linux",
                "vhd_uri": "",
                "write_accelerator_enabled": false
              }
            ],
            "tags": {
              "Env": "consul-vfej",
              "Name": "consul"
            },
            "timeouts": null,
            "vm_size": "Standard_DS1_v2",
            "zones": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_network_interface.consul",
            "azurerm_public_ip.consul",
            "data.azurerm_image.ubuntu",
            "data.template_file.azure-server-init",
            "data.terraform_remote_state.iam",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_virtual_machine",
      "name": "consul-mgw",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "additional_capabilities": [],
            "availability_set_id": null,
            "boot_diagnostics": [],
            "delete_data_disks_on_termination": true,
            "delete_os_disk_on_termination": true,
            "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Compute/virtualMachines/consul-mgw-vm",
            "identity": [
              {
                "identity_ids": [
                  "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.ManagedIdentity/userAssignedIdentities/consul-vfej"
                ],
                "principal_id": "",
                "type": "UserAssigned"
              }
            ],
            "license_type": null,
            "location": "southcentralus",
            "name": "consul-mgw-vm",
            "network_interface_ids": [
              "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Network/networkInterfaces/consul-mgw-nic"
            ],
            "os_profile": [
              {
                "admin_password": "",
                "admin_username": "ubuntu",
                "computer_name": "consul-mgw",
                "custom_data": "1a4db37fb0b4635a0f0bf789e224e3e20f76a0bc"
              }
            ],
            "os_profile_linux_config": [
              {
                "disable_password_authentication": true,
                "ssh_keys": [
                  {
                    "key_data": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxMiAazJkJREhUbnslhf0urtOdHQTImR0Ko3TOWjVCb55HTwj1/LwRATDiL+0RHWiCL4S8zU2KvlBb9huj/PSRo64I3wRjHREy6GHM1uqm/OXgxidvemkY5bZzUmJ9cohj1ItbMcH+LiPTfrmAkIsdsgVfCeLWco2UO7PkwVv2757gIOsFd9ybOwlmnlaM3DiBmD5VO5APIacUwfSv3Ol8sQs3hpaxUON6e65+MA1voa1Kd7PlXE9a3NUKBfk9BwgQ9Cobbo9pSU9V+p7T9ClDd7jCqseeHwketltG14R7mSO9zB+CPLCRxz6GkueHitD0LT0y2itmL5hkiyuK9PJJ",
                    "path": "/home/ubuntu/.ssh/authorized_keys"
                  }
                ]
              }
            ],
            "os_profile_secrets": [],
            "os_profile_windows_config": [],
            "plan": [],
            "primary_network_interface_id": null,
            "proximity_placement_group_id": null,
            "resource_group_name": "instruqt-vfej",
            "storage_data_disk": [],
            "storage_image_reference": [
              {
                "id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/packer/providers/Microsoft.Compute/images/hashistack-2023-04-13",
                "offer": "",
                "publisher": "",
                "sku": "",
                "version": ""
              }
            ],
            "storage_os_disk": [
              {
                "caching": "ReadWrite",
                "create_option": "FromImage",
                "disk_size_gb": 30,
                "image_uri": "",
                "managed_disk_id": "/subscriptions/37bc21fd-d0f5-46a3-8802-d5136be12b7e/resourceGroups/instruqt-vfej/providers/Microsoft.Compute/disks/consul-mgw-disk",
                "managed_disk_type": "Standard_LRS",
                "name": "consul-mgw-disk",
                "os_type": "Linux",
                "vhd_uri": "",
                "write_accelerator_enabled": false
              }
            ],
            "tags": {
              "Env": "consul-vfej",
              "Name": "consul-mgw"
            },
            "timeouts": null,
            "vm_size": "Standard_DS1_v2",
            "zones": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_network_interface.consul-mgw",
            "azurerm_public_ip.mgw",
            "data.azurerm_image.ubuntu",
            "data.template_file.azure-mgw-init",
            "data.terraform_remote_state.iam",
            "data.terraform_remote_state.infra"
          ]
        }
      ]
    }
  ]
}
